// (Mostly) Autogenerated from mkBlueprint
import { Data, Validator } from "@lucid-evolution/lucid";

export type Address = XAddressMint["_"];
export type Certificate = XCertificateMint["_"];
export type Constitution = XConstitutionMint["_"];
export type Credential = XCredentialMint["_"];
export type Datum = XDatumMint["_"];
export type Delegate = XDelegateMint["_"];
export type DelegateRepresentative = XDelegateRepresentativeMint["_"];
export type ExecutionUnits = XExecutionUnitsMint["_"];
export type GovernanceActionId = XGovernanceActionIdMint["_"];
export type OutputReference = XOutputReferenceMint["_"];
export type ProtocolVersion = XProtocolVersionMint["_"];
export type Vote = XVoteMint["_"];
export type Voter = XVoterMint["_"];

export interface XAddressMint {
  new (): Validator;
  _: {
    paymentCredential: { VerificationKey: [string] } | { Script: [string] };
    stakeCredential:
      | { Inline: [{ VerificationKey: [string] } | { Script: [string] }] }
      | {
          Pointer: {
            slotNumber: bigint;
            transactionIndex: bigint;
            certificateIndex: bigint;
          };
        }
      | null;
  };
}

export const XAddressMint = Object.assign(
  function () {
    return {
      type: "PlutusV3",
      script:
        "590161010100323232323232253330023232323232533233008300130093754004264664644a666018600a601a6ea801c4c8c8c8c94ccc04cc0540084cc01800c4c94ccc044c0280044c8c94ccc058c0600084c94ccc050c0340044c8c94ccc064c06c0084cc03000402c58c064004c058dd50010a99980a18058008991919191919299980e980f8010078b1bad301d001301d002375a603600260360046eb4c064004c058dd50010b180a1baa001163016001301337540042a66602260100022a66602860266ea80080185858c044dd50008b18098009809801180880098071baa007162232533300d3006001132325333012301400200416375c6024002601e6ea800c54ccc034c0100044c8c94ccc048c05000801058dd7180900098079baa00316300d37540046e1d200214a26eb8c030c028dd50011b874800058c028c02c00cc024008c020008c020004c010dd50008a4c26cacae6955ceaab9e5573eae855d101",
    };
  },

  {
    _: {
      title: "Address",
      description:
        "A Cardano `Address` typically holding one or two credential references.\n\n Note that legacy bootstrap addresses (a.k.a. 'Byron addresses') are\n completely excluded from Plutus contexts. Thus, from an on-chain\n perspective only exists addresses of type 00, 01, ..., 07 as detailed\n in [CIP-0019 :: Shelley Addresses](https://github.com/cardano-foundation/CIPs/tree/master/CIP-0019/#shelley-addresses).",
      anyOf: [
        {
          title: "Address",
          dataType: "constructor",
          index: 0,
          fields: [
            {
              title: "paymentCredential",
              description:
                "A general structure for representing an on-chain `Credential`.\n\n Credentials are always one of two kinds: a direct public/private key\n pair, or a script (native or Plutus).",
              anyOf: [
                {
                  title: "VerificationKey",
                  dataType: "constructor",
                  index: 0,
                  fields: [{ dataType: "bytes" }],
                },
                {
                  title: "Script",
                  dataType: "constructor",
                  index: 1,
                  fields: [{ dataType: "bytes" }],
                },
              ],
            },
            {
              title: "stakeCredential",
              anyOf: [
                {
                  title: "Some",
                  description: "An optional value.",
                  dataType: "constructor",
                  index: 0,
                  fields: [
                    {
                      description:
                        "Represent a type of object that can be represented either inline (by hash)\n or via a reference (i.e. a pointer to an on-chain location).\n\n This is mainly use for capturing pointers to a stake credential\n registration certificate in the case of so-called pointer addresses.",
                      anyOf: [
                        {
                          title: "Inline",
                          dataType: "constructor",
                          index: 0,
                          fields: [
                            {
                              description:
                                "A general structure for representing an on-chain `Credential`.\n\n Credentials are always one of two kinds: a direct public/private key\n pair, or a script (native or Plutus).",
                              anyOf: [
                                {
                                  title: "VerificationKey",
                                  dataType: "constructor",
                                  index: 0,
                                  fields: [{ dataType: "bytes" }],
                                },
                                {
                                  title: "Script",
                                  dataType: "constructor",
                                  index: 1,
                                  fields: [{ dataType: "bytes" }],
                                },
                              ],
                            },
                          ],
                        },
                        {
                          title: "Pointer",
                          dataType: "constructor",
                          index: 1,
                          fields: [
                            { dataType: "integer", title: "slotNumber" },
                            { dataType: "integer", title: "transactionIndex" },
                            { dataType: "integer", title: "certificateIndex" },
                          ],
                        },
                      ],
                    },
                  ],
                },
                {
                  title: "None",
                  description: "Nothing.",
                  dataType: "constructor",
                  index: 1,
                  fields: [],
                },
              ],
            },
          ],
        },
      ],
    },
  },
) as unknown as XAddressMint;

export interface XCertificateMint {
  new (): Validator;
  _:
    | {
        RegisterCredential: {
          credential: { VerificationKey: [string] } | { Script: [string] };
          deposit: {};
        };
      }
    | {
        UnregisterCredential: {
          credential: { VerificationKey: [string] } | { Script: [string] };
          refund: {};
        };
      }
    | {
        DelegateCredential: {
          credential: { VerificationKey: [string] } | { Script: [string] };
          delegate:
            | { DelegateBlockProduction: { stakePool: string } }
            | {
                DelegateVote: {
                  delegateRepresentative:
                    | {
                        Registered: [
                          { VerificationKey: [string] } | { Script: [string] },
                        ];
                      }
                    | "AlwaysAbstain"
                    | "AlwaysNoConfidence";
                };
              }
            | {
                DelegateBoth: {
                  stakePool: string;
                  delegateRepresentative:
                    | {
                        Registered: [
                          { VerificationKey: [string] } | { Script: [string] },
                        ];
                      }
                    | "AlwaysAbstain"
                    | "AlwaysNoConfidence";
                };
              };
        };
      }
    | {
        RegisterAndDelegateCredential: {
          credential: { VerificationKey: [string] } | { Script: [string] };
          delegate:
            | { DelegateBlockProduction: { stakePool: string } }
            | {
                DelegateVote: {
                  delegateRepresentative:
                    | {
                        Registered: [
                          { VerificationKey: [string] } | { Script: [string] },
                        ];
                      }
                    | "AlwaysAbstain"
                    | "AlwaysNoConfidence";
                };
              }
            | {
                DelegateBoth: {
                  stakePool: string;
                  delegateRepresentative:
                    | {
                        Registered: [
                          { VerificationKey: [string] } | { Script: [string] },
                        ];
                      }
                    | "AlwaysAbstain"
                    | "AlwaysNoConfidence";
                };
              };
          deposit: bigint;
        };
      }
    | {
        RegisterDelegateRepresentative: {
          delegateRepresentative:
            | { VerificationKey: [string] }
            | { Script: [string] };
          deposit: bigint;
        };
      }
    | {
        UpdateDelegateRepresentative: {
          delegateRepresentative:
            | { VerificationKey: [string] }
            | { Script: [string] };
        };
      }
    | {
        UnregisterDelegateRepresentative: {
          delegateRepresentative:
            | { VerificationKey: [string] }
            | { Script: [string] };
          refund: bigint;
        };
      }
    | { RegisterStakePool: { stakePool: string; vrf: string } }
    | { RetireStakePool: { stakePool: string; atEpoch: bigint } }
    | {
        AuthorizeConstitutionalCommitteeProxy: {
          constitutionalCommitteeMember:
            | { VerificationKey: [string] }
            | { Script: [string] };
          proxy: { VerificationKey: [string] } | { Script: [string] };
        };
      }
    | {
        RetireFromConstitutionalCommittee: {
          constitutionalCommitteeMember:
            | { VerificationKey: [string] }
            | { Script: [string] };
        };
      };
}

export const XCertificateMint = Object.assign(
  function () {
    return {
      type: "PlutusV3",
      script:
        "59037f0101003232323232322533300232323232325332330083001300937540042646646464646464464a6660226014002264646464a666030603400426601600626601000200c2c60300026030004602c00260266ea803054ccc044c0200044c8c8c8c94ccc060c0680084cc02c00c4cc02000401858c060004c060008c058004c04cdd50060a9998089803000899191919299980c180d0010998058018998038008030b180c000980c001180b00098099baa00c153330113370e90030008991919191919299980d180e0010998068028998048018040b1bad301a001301a002301800130180023016001301337540182a66602266e1d20080011323232325333018301a00213300b00300616375a60300026030004602c00260266ea803054ccc044cdc3a401400226464a66602c60300042660120020082c602c00260266ea803054ccc044cdc3a4018002264646464a666030603400426601600600c2c6eb4c060004c060008c058004c04cdd50060a99980899b87480380044c8c8c8c94ccc060c06800801858dd7180c000980c0011bae3016001301337540182a66602266e1d20100011323232325333018301a00200616375a603000260300046eb8c058004c04cdd50060a99980899b87480480044c8c8c8c94ccc060c0680084cc02c00c4cc02c00401858c060004c060008c058004c04cdd50060a99980899b87480500044c8c94ccc058c0600084cc02400401058c058004c04cdd50060b18089baa00b22325333011300a001132325333016301800200416375c602c00260266ea800c54ccc044c0200044c8c94ccc058c0600084cc01c00401058c058004c04cdd50018a9998089803000899191919299980c180d0010998048008030b180c000980c0011bae3016001301337540062c60226ea8008894ccc03cc018c040dd50010a99980918089baa00200116162232533300f30080011323253330143016002133007001004163014001301137540062a66601e600c0022a66602460226ea800c0085854ccc03cc01000454ccc048c044dd50018010b0b18079baa002370e9002111929998069803000899192999809180a0010020b1bae3012001300f37540062a66601a600800226464a66602460280040082c6eb8c048004c03cdd50018b18069baa002370e90010a51375c601860146ea8008dc3a40002c6014601600660120046010004601000260086ea8004526136565734aae7555cf2ab9f5742ae89",
    };
  },

  {
    _: {
      title: "Certificate",
      description:
        "An on-chain certificate attesting of some operation. Publishing\n certificates triggers different kind of rules; most of the time,\n they require signatures from specific keys.",
      anyOf: [
        {
          title: "RegisterCredential",
          description:
            "Register a stake credential with an optional deposit amount.\n The deposit is always present when using the new registration certificate\n format available since the Conway era.",
          dataType: "constructor",
          index: 0,
          fields: [
            {
              title: "credential",
              description:
                "A general structure for representing an on-chain `Credential`.\n\n Credentials are always one of two kinds: a direct public/private key\n pair, or a script (native or Plutus).",
              anyOf: [
                {
                  title: "VerificationKey",
                  dataType: "constructor",
                  index: 0,
                  fields: [{ dataType: "bytes" }],
                },
                {
                  title: "Script",
                  dataType: "constructor",
                  index: 1,
                  fields: [{ dataType: "bytes" }],
                },
              ],
            },
            {
              title: "deposit",
              anyOf: [
                {
                  title: "Never",
                  description: "Nothing.",
                  dataType: "constructor",
                  index: 1,
                  fields: [],
                },
              ],
            },
          ],
        },
        {
          title: "UnregisterCredential",
          description:
            "Un-Register a stake credential with an optional refund amount\n The deposit is always present when using the new de-registration certificate\n format available since the Conway era.",
          dataType: "constructor",
          index: 1,
          fields: [
            {
              title: "credential",
              description:
                "A general structure for representing an on-chain `Credential`.\n\n Credentials are always one of two kinds: a direct public/private key\n pair, or a script (native or Plutus).",
              anyOf: [
                {
                  title: "VerificationKey",
                  dataType: "constructor",
                  index: 0,
                  fields: [{ dataType: "bytes" }],
                },
                {
                  title: "Script",
                  dataType: "constructor",
                  index: 1,
                  fields: [{ dataType: "bytes" }],
                },
              ],
            },
            {
              title: "refund",
              anyOf: [
                {
                  title: "Never",
                  description: "Nothing.",
                  dataType: "constructor",
                  index: 1,
                  fields: [],
                },
              ],
            },
          ],
        },
        {
          title: "DelegateCredential",
          description: "Delegate stake to a [Delegate](#Delegate).",
          dataType: "constructor",
          index: 2,
          fields: [
            {
              title: "credential",
              description:
                "A general structure for representing an on-chain `Credential`.\n\n Credentials are always one of two kinds: a direct public/private key\n pair, or a script (native or Plutus).",
              anyOf: [
                {
                  title: "VerificationKey",
                  dataType: "constructor",
                  index: 0,
                  fields: [{ dataType: "bytes" }],
                },
                {
                  title: "Script",
                  dataType: "constructor",
                  index: 1,
                  fields: [{ dataType: "bytes" }],
                },
              ],
            },
            {
              title: "delegate",
              description:
                "A type of stake delegation that can be either block-production, vote or\n both. Note that delegation types aren't cancelling one another, so it is\n possible to delegate block production in one transaction, and delegate vote\n in another. This second delegation **does NOT** invalidate the first one.",
              anyOf: [
                {
                  title: "DelegateBlockProduction",
                  dataType: "constructor",
                  index: 0,
                  fields: [{ title: "stakePool", dataType: "bytes" }],
                },
                {
                  title: "DelegateVote",
                  dataType: "constructor",
                  index: 1,
                  fields: [
                    {
                      title: "delegateRepresentative",
                      anyOf: [
                        {
                          title: "Registered",
                          dataType: "constructor",
                          index: 0,
                          fields: [
                            {
                              description:
                                "A general structure for representing an on-chain `Credential`.\n\n Credentials are always one of two kinds: a direct public/private key\n pair, or a script (native or Plutus).",
                              anyOf: [
                                {
                                  title: "VerificationKey",
                                  dataType: "constructor",
                                  index: 0,
                                  fields: [{ dataType: "bytes" }],
                                },
                                {
                                  title: "Script",
                                  dataType: "constructor",
                                  index: 1,
                                  fields: [{ dataType: "bytes" }],
                                },
                              ],
                            },
                          ],
                        },
                        {
                          title: "AlwaysAbstain",
                          dataType: "constructor",
                          index: 1,
                          fields: [],
                        },
                        {
                          title: "AlwaysNoConfidence",
                          dataType: "constructor",
                          index: 2,
                          fields: [],
                        },
                      ],
                    },
                  ],
                },
                {
                  title: "DelegateBoth",
                  dataType: "constructor",
                  index: 2,
                  fields: [
                    { title: "stakePool", dataType: "bytes" },
                    {
                      title: "delegateRepresentative",
                      anyOf: [
                        {
                          title: "Registered",
                          dataType: "constructor",
                          index: 0,
                          fields: [
                            {
                              description:
                                "A general structure for representing an on-chain `Credential`.\n\n Credentials are always one of two kinds: a direct public/private key\n pair, or a script (native or Plutus).",
                              anyOf: [
                                {
                                  title: "VerificationKey",
                                  dataType: "constructor",
                                  index: 0,
                                  fields: [{ dataType: "bytes" }],
                                },
                                {
                                  title: "Script",
                                  dataType: "constructor",
                                  index: 1,
                                  fields: [{ dataType: "bytes" }],
                                },
                              ],
                            },
                          ],
                        },
                        {
                          title: "AlwaysAbstain",
                          dataType: "constructor",
                          index: 1,
                          fields: [],
                        },
                        {
                          title: "AlwaysNoConfidence",
                          dataType: "constructor",
                          index: 2,
                          fields: [],
                        },
                      ],
                    },
                  ],
                },
              ],
            },
          ],
        },
        {
          title: "RegisterAndDelegateCredential",
          description:
            "Register and delegate subbit-tx credential to a Delegatee in one certificate.",
          dataType: "constructor",
          index: 3,
          fields: [
            {
              title: "credential",
              description:
                "A general structure for representing an on-chain `Credential`.\n\n Credentials are always one of two kinds: a direct public/private key\n pair, or a script (native or Plutus).",
              anyOf: [
                {
                  title: "VerificationKey",
                  dataType: "constructor",
                  index: 0,
                  fields: [{ dataType: "bytes" }],
                },
                {
                  title: "Script",
                  dataType: "constructor",
                  index: 1,
                  fields: [{ dataType: "bytes" }],
                },
              ],
            },
            {
              title: "delegate",
              description:
                "A type of stake delegation that can be either block-production, vote or\n both. Note that delegation types aren't cancelling one another, so it is\n possible to delegate block production in one transaction, and delegate vote\n in another. This second delegation **does NOT** invalidate the first one.",
              anyOf: [
                {
                  title: "DelegateBlockProduction",
                  dataType: "constructor",
                  index: 0,
                  fields: [{ title: "stakePool", dataType: "bytes" }],
                },
                {
                  title: "DelegateVote",
                  dataType: "constructor",
                  index: 1,
                  fields: [
                    {
                      title: "delegateRepresentative",
                      anyOf: [
                        {
                          title: "Registered",
                          dataType: "constructor",
                          index: 0,
                          fields: [
                            {
                              description:
                                "A general structure for representing an on-chain `Credential`.\n\n Credentials are always one of two kinds: a direct public/private key\n pair, or a script (native or Plutus).",
                              anyOf: [
                                {
                                  title: "VerificationKey",
                                  dataType: "constructor",
                                  index: 0,
                                  fields: [{ dataType: "bytes" }],
                                },
                                {
                                  title: "Script",
                                  dataType: "constructor",
                                  index: 1,
                                  fields: [{ dataType: "bytes" }],
                                },
                              ],
                            },
                          ],
                        },
                        {
                          title: "AlwaysAbstain",
                          dataType: "constructor",
                          index: 1,
                          fields: [],
                        },
                        {
                          title: "AlwaysNoConfidence",
                          dataType: "constructor",
                          index: 2,
                          fields: [],
                        },
                      ],
                    },
                  ],
                },
                {
                  title: "DelegateBoth",
                  dataType: "constructor",
                  index: 2,
                  fields: [
                    { title: "stakePool", dataType: "bytes" },
                    {
                      title: "delegateRepresentative",
                      anyOf: [
                        {
                          title: "Registered",
                          dataType: "constructor",
                          index: 0,
                          fields: [
                            {
                              description:
                                "A general structure for representing an on-chain `Credential`.\n\n Credentials are always one of two kinds: a direct public/private key\n pair, or a script (native or Plutus).",
                              anyOf: [
                                {
                                  title: "VerificationKey",
                                  dataType: "constructor",
                                  index: 0,
                                  fields: [{ dataType: "bytes" }],
                                },
                                {
                                  title: "Script",
                                  dataType: "constructor",
                                  index: 1,
                                  fields: [{ dataType: "bytes" }],
                                },
                              ],
                            },
                          ],
                        },
                        {
                          title: "AlwaysAbstain",
                          dataType: "constructor",
                          index: 1,
                          fields: [],
                        },
                        {
                          title: "AlwaysNoConfidence",
                          dataType: "constructor",
                          index: 2,
                          fields: [],
                        },
                      ],
                    },
                  ],
                },
              ],
            },
            { title: "deposit", dataType: "integer" },
          ],
        },
        {
          title: "RegisterDelegateRepresentative",
          description:
            "Register a delegate representative (a.k.a DRep). The deposit is explicit and\n is refunded when the delegate steps down (unregister).",
          dataType: "constructor",
          index: 4,
          fields: [
            {
              title: "delegateRepresentative",
              description:
                "A general structure for representing an on-chain `Credential`.\n\n Credentials are always one of two kinds: a direct public/private key\n pair, or a script (native or Plutus).",
              anyOf: [
                {
                  title: "VerificationKey",
                  dataType: "constructor",
                  index: 0,
                  fields: [{ dataType: "bytes" }],
                },
                {
                  title: "Script",
                  dataType: "constructor",
                  index: 1,
                  fields: [{ dataType: "bytes" }],
                },
              ],
            },
            { title: "deposit", dataType: "integer" },
          ],
        },
        {
          title: "UpdateDelegateRepresentative",
          description:
            "Update a delegate representative (a.k.a DRep). The certificate also contains\n metadata which aren't visible on-chain.",
          dataType: "constructor",
          index: 5,
          fields: [
            {
              title: "delegateRepresentative",
              description:
                "A general structure for representing an on-chain `Credential`.\n\n Credentials are always one of two kinds: a direct public/private key\n pair, or a script (native or Plutus).",
              anyOf: [
                {
                  title: "VerificationKey",
                  dataType: "constructor",
                  index: 0,
                  fields: [{ dataType: "bytes" }],
                },
                {
                  title: "Script",
                  dataType: "constructor",
                  index: 1,
                  fields: [{ dataType: "bytes" }],
                },
              ],
            },
          ],
        },
        {
          title: "UnregisterDelegateRepresentative",
          description:
            "UnRegister a delegate representative, and refund back its past deposit.",
          dataType: "constructor",
          index: 6,
          fields: [
            {
              title: "delegateRepresentative",
              description:
                "A general structure for representing an on-chain `Credential`.\n\n Credentials are always one of two kinds: a direct public/private key\n pair, or a script (native or Plutus).",
              anyOf: [
                {
                  title: "VerificationKey",
                  dataType: "constructor",
                  index: 0,
                  fields: [{ dataType: "bytes" }],
                },
                {
                  title: "Script",
                  dataType: "constructor",
                  index: 1,
                  fields: [{ dataType: "bytes" }],
                },
              ],
            },
            { title: "refund", dataType: "integer" },
          ],
        },
        {
          title: "RegisterStakePool",
          description: "Register a new stake pool",
          dataType: "constructor",
          index: 7,
          fields: [
            { title: "stakePool", dataType: "bytes" },
            { title: "vrf", dataType: "bytes" },
          ],
        },
        {
          title: "RetireStakePool",
          description:
            "Retire a stake pool. 'at_epoch' indicates in which the retirement will take place",
          dataType: "constructor",
          index: 8,
          fields: [
            { title: "stakePool", dataType: "bytes" },
            { dataType: "integer", title: "atEpoch" },
          ],
        },
        {
          title: "AuthorizeConstitutionalCommitteeProxy",
          description:
            "Authorize a Hot credential for a specific Committee member's cold credential",
          dataType: "constructor",
          index: 9,
          fields: [
            {
              title: "constitutionalCommitteeMember",
              description:
                "A general structure for representing an on-chain `Credential`.\n\n Credentials are always one of two kinds: a direct public/private key\n pair, or a script (native or Plutus).",
              anyOf: [
                {
                  title: "VerificationKey",
                  dataType: "constructor",
                  index: 0,
                  fields: [{ dataType: "bytes" }],
                },
                {
                  title: "Script",
                  dataType: "constructor",
                  index: 1,
                  fields: [{ dataType: "bytes" }],
                },
              ],
            },
            {
              title: "proxy",
              description:
                "A general structure for representing an on-chain `Credential`.\n\n Credentials are always one of two kinds: a direct public/private key\n pair, or a script (native or Plutus).",
              anyOf: [
                {
                  title: "VerificationKey",
                  dataType: "constructor",
                  index: 0,
                  fields: [{ dataType: "bytes" }],
                },
                {
                  title: "Script",
                  dataType: "constructor",
                  index: 1,
                  fields: [{ dataType: "bytes" }],
                },
              ],
            },
          ],
        },
        {
          title: "RetireFromConstitutionalCommittee",
          description:
            "Step down from the constitutional committee as a member.",
          dataType: "constructor",
          index: 10,
          fields: [
            {
              title: "constitutionalCommitteeMember",
              description:
                "A general structure for representing an on-chain `Credential`.\n\n Credentials are always one of two kinds: a direct public/private key\n pair, or a script (native or Plutus).",
              anyOf: [
                {
                  title: "VerificationKey",
                  dataType: "constructor",
                  index: 0,
                  fields: [{ dataType: "bytes" }],
                },
                {
                  title: "Script",
                  dataType: "constructor",
                  index: 1,
                  fields: [{ dataType: "bytes" }],
                },
              ],
            },
          ],
        },
      ],
    },
  },
) as unknown as XCertificateMint;

export interface XConstitutionMint {
  new (): Validator;
  _: { guardrails: string | null };
}

export const XConstitutionMint = Object.assign(
  function () {
    return {
      type: "PlutusV3",
      script:
        "58b201010032323232323225333002323232323253323300830013009375400426464a666014600660166ea80144c8c94ccc03cc0440084c94ccc034c0180044c8c94ccc048c05000801858dd7180900098079baa0021533300d3370e90010008a99980818079baa0020041616300d37540022c601e00260186ea8014585289bae300c300a37540046e1d200016300a300b0033009002300800230080013004375400229309b2b2b9a5573aaae7955cfaba15745",
    };
  },

  {
    _: {
      title: "Constitution",
      anyOf: [
        {
          title: "Constitution",
          dataType: "constructor",
          index: 0,
          fields: [
            {
              title: "guardrails",
              anyOf: [
                {
                  title: "Some",
                  description: "An optional value.",
                  dataType: "constructor",
                  index: 0,
                  fields: [{ dataType: "bytes" }],
                },
                {
                  title: "None",
                  description: "Nothing.",
                  dataType: "constructor",
                  index: 1,
                  fields: [],
                },
              ],
            },
          ],
        },
      ],
    },
  },
) as unknown as XConstitutionMint;

export interface XCredentialMint {
  new (): Validator;
  _: { VerificationKey: [string] } | { Script: [string] };
}

export const XCredentialMint = Object.assign(
  function () {
    return {
      type: "PlutusV3",
      script:
        "589e01010032323232323225333002323232323253330073370e900018041baa0011323232533300a3370e900000089919299980798088010020b1bae300f001300c375400a2a66601466e1d200200113232533300f301100200416375c601e00260186ea801458c028dd50020a51375c601660126ea800458c028c02c00cc024008c020008c020004c010dd50008a4c26cacae6955ceaab9e5573eae855d101",
    };
  },

  {
    _: {
      title: "Credential",
      description:
        "A general structure for representing an on-chain `Credential`.\n\n Credentials are always one of two kinds: a direct public/private key\n pair, or a script (native or Plutus).",
      anyOf: [
        {
          title: "VerificationKey",
          dataType: "constructor",
          index: 0,
          fields: [{ dataType: "bytes" }],
        },
        {
          title: "Script",
          dataType: "constructor",
          index: 1,
          fields: [{ dataType: "bytes" }],
        },
      ],
    },
  },
) as unknown as XCredentialMint;

export interface XDatumMint {
  new (): Validator;
  _: "NoDatum" | { DatumHash: [string] } | { InlineDatum: [Data] };
}

export const XDatumMint = Object.assign(
  function () {
    return {
      type: "PlutusV3",
      script:
        "58b201010032323232323225333002323232323253330073370e900018041baa0011323232533300a3370e90000008a99980698061baa005002161533300a3370e900100089919299980798088010020b1bae300f001300c375400a2a66601466e1d200400113232533300f301100200416300f001300c375400a2c60146ea80105289bae300b300937540022c6014601600660120046010004601000260086ea8004526136565734aae7555cf2ab9f5742ae881",
    };
  },

  {
    _: {
      title: "Datum",
      description: "An output `Datum`.",
      anyOf: [
        { title: "NoDatum", dataType: "constructor", index: 0, fields: [] },
        {
          title: "DatumHash",
          description: "A datum referenced by its hash digest.",
          dataType: "constructor",
          index: 1,
          fields: [{ dataType: "bytes" }],
        },
        {
          title: "InlineDatum",
          description: "A datum completely inlined in the output.",
          dataType: "constructor",
          index: 2,
          fields: [{ description: "Any Plutus data." }],
        },
      ],
    },
  },
) as unknown as XDatumMint;

export interface XDelegateMint {
  new (): Validator;
  _:
    | { DelegateBlockProduction: { stakePool: string } }
    | {
        DelegateVote: {
          delegateRepresentative:
            | {
                Registered: [
                  { VerificationKey: [string] } | { Script: [string] },
                ];
              }
            | "AlwaysAbstain"
            | "AlwaysNoConfidence";
        };
      }
    | {
        DelegateBoth: {
          stakePool: string;
          delegateRepresentative:
            | {
                Registered: [
                  { VerificationKey: [string] } | { Script: [string] },
                ];
              }
            | "AlwaysAbstain"
            | "AlwaysNoConfidence";
        };
      };
}

export const XDelegateMint = Object.assign(
  function () {
    return {
      type: "PlutusV3",
      script:
        "59016201010032323232323225333002323232323253323300830013009375400426466464464a66601a600c00226464a66602460280040082c6eb8c048004c03cdd50040a9998069802000899192999809180a0010998028008020b180900098079baa0081533300d3370e9002000899191919299980a180b0010998038008030b180a000980a0011bae3012001300f37540102c601a6ea801c88c94ccc034c0180044c8c94ccc048c0500084c94ccc040c0240044c8c94ccc054c05c00801c58dd7180a80098091baa002153330103007001132325333015301700200716375c602a00260246ea800858c040dd50008b180900098079baa0031533300d300400115333010300f37540060042c2a66601a66e1d200400115333010300f37540060042c2c601a6ea8008dc3a40042944dd7180618051baa002370e90000b1805180580198048011804001180400098021baa00114984d9595cd2ab9d5573caae7d5d0aba21",
    };
  },

  {
    _: {
      title: "Delegate",
      description:
        "A type of stake delegation that can be either block-production, vote or\n both. Note that delegation types aren't cancelling one another, so it is\n possible to delegate block production in one transaction, and delegate vote\n in another. This second delegation **does NOT** invalidate the first one.",
      anyOf: [
        {
          title: "DelegateBlockProduction",
          dataType: "constructor",
          index: 0,
          fields: [{ title: "stakePool", dataType: "bytes" }],
        },
        {
          title: "DelegateVote",
          dataType: "constructor",
          index: 1,
          fields: [
            {
              title: "delegateRepresentative",
              anyOf: [
                {
                  title: "Registered",
                  dataType: "constructor",
                  index: 0,
                  fields: [
                    {
                      description:
                        "A general structure for representing an on-chain `Credential`.\n\n Credentials are always one of two kinds: a direct public/private key\n pair, or a script (native or Plutus).",
                      anyOf: [
                        {
                          title: "VerificationKey",
                          dataType: "constructor",
                          index: 0,
                          fields: [{ dataType: "bytes" }],
                        },
                        {
                          title: "Script",
                          dataType: "constructor",
                          index: 1,
                          fields: [{ dataType: "bytes" }],
                        },
                      ],
                    },
                  ],
                },
                {
                  title: "AlwaysAbstain",
                  dataType: "constructor",
                  index: 1,
                  fields: [],
                },
                {
                  title: "AlwaysNoConfidence",
                  dataType: "constructor",
                  index: 2,
                  fields: [],
                },
              ],
            },
          ],
        },
        {
          title: "DelegateBoth",
          dataType: "constructor",
          index: 2,
          fields: [
            { title: "stakePool", dataType: "bytes" },
            {
              title: "delegateRepresentative",
              anyOf: [
                {
                  title: "Registered",
                  dataType: "constructor",
                  index: 0,
                  fields: [
                    {
                      description:
                        "A general structure for representing an on-chain `Credential`.\n\n Credentials are always one of two kinds: a direct public/private key\n pair, or a script (native or Plutus).",
                      anyOf: [
                        {
                          title: "VerificationKey",
                          dataType: "constructor",
                          index: 0,
                          fields: [{ dataType: "bytes" }],
                        },
                        {
                          title: "Script",
                          dataType: "constructor",
                          index: 1,
                          fields: [{ dataType: "bytes" }],
                        },
                      ],
                    },
                  ],
                },
                {
                  title: "AlwaysAbstain",
                  dataType: "constructor",
                  index: 1,
                  fields: [],
                },
                {
                  title: "AlwaysNoConfidence",
                  dataType: "constructor",
                  index: 2,
                  fields: [],
                },
              ],
            },
          ],
        },
      ],
    },
  },
) as unknown as XDelegateMint;

export interface XDelegateRepresentativeMint {
  new (): Validator;
  _:
    | { Registered: [{ VerificationKey: [string] } | { Script: [string] }] }
    | "AlwaysAbstain"
    | "AlwaysNoConfidence";
}

export const XDelegateRepresentativeMint = Object.assign(
  function () {
    return {
      type: "PlutusV3",
      script:
        "58ec0101003232323232322533300232323232325332330083001300937540042646464a666016600800226464a6660206024004264a66601c600e00226464a666026602a00400e2c6eb8c04c004c040dd50010a99980719b87480080044c8c94ccc04cc05400801c58dd7180980098081baa00216300e37540022c6020002601a6ea801854ccc02ccdc3a40040022a66601c601a6ea80180085854ccc02ccdc3a40080022a66601c601a6ea80180085858c02cdd50028a51375c601860146ea8008dc3a40002c6014601600660120046010004601000260086ea8004526136565734aae7555cf2ab9f5742ae881",
    };
  },

  {
    _: {
      title: "DelegateRepresentative",
      anyOf: [
        {
          title: "Registered",
          dataType: "constructor",
          index: 0,
          fields: [
            {
              description:
                "A general structure for representing an on-chain `Credential`.\n\n Credentials are always one of two kinds: a direct public/private key\n pair, or a script (native or Plutus).",
              anyOf: [
                {
                  title: "VerificationKey",
                  dataType: "constructor",
                  index: 0,
                  fields: [{ dataType: "bytes" }],
                },
                {
                  title: "Script",
                  dataType: "constructor",
                  index: 1,
                  fields: [{ dataType: "bytes" }],
                },
              ],
            },
          ],
        },
        {
          title: "AlwaysAbstain",
          dataType: "constructor",
          index: 1,
          fields: [],
        },
        {
          title: "AlwaysNoConfidence",
          dataType: "constructor",
          index: 2,
          fields: [],
        },
      ],
    },
  },
) as unknown as XDelegateRepresentativeMint;

export interface XExecutionUnitsMint {
  new (): Validator;
  _: { memory: bigint; cpu: bigint };
}

export const XExecutionUnitsMint = Object.assign(
  function () {
    return {
      type: "PlutusV3",
      script:
        "588301010032323232323225333002323232323253330073370e900018041baa00113253330083370e900018049baa003132323232533300f301100214a22c6eb4c03c004c03c008dd6980680098051baa00316375c601660126ea800458c028c02c00cc024008c020008c020004c010dd50008a4c26cacae6955ceaab9e5573eae855d101",
    };
  },

  {
    _: {
      title: "ExecutionUnits",
      anyOf: [
        {
          title: "ExecutionUnits",
          dataType: "constructor",
          index: 0,
          fields: [
            { dataType: "integer", title: "memory" },
            { dataType: "integer", title: "cpu" },
          ],
        },
      ],
    },
  },
) as unknown as XExecutionUnitsMint;

export interface XGovernanceActionIdMint {
  new (): Validator;
  _: { transaction: string; proposalProcedure: bigint };
}

export const XGovernanceActionIdMint = Object.assign(
  function () {
    return {
      type: "PlutusV3",
      script:
        "588301010032323232323225333002323232323253330073370e900018041baa00113253330083370e900018049baa003132323232533300f301100214a22c6eb4c03c004c03c008dd7180680098051baa00316375c601660126ea800458c028c02c00cc024008c020008c020004c010dd50008a4c26cacae6955ceaab9e5573eae855d101",
    };
  },

  {
    _: {
      title: "GovernanceActionId",
      anyOf: [
        {
          title: "GovernanceActionId",
          dataType: "constructor",
          index: 0,
          fields: [
            { title: "transaction", dataType: "bytes" },
            { title: "proposalProcedure", dataType: "integer" },
          ],
        },
      ],
    },
  },
) as unknown as XGovernanceActionIdMint;

export interface XOutputReferenceMint {
  new (): Validator;
  _: { transactionId: string; outputIndex: bigint };
}

export const XOutputReferenceMint = Object.assign(
  function () {
    return {
      type: "PlutusV3",
      script:
        "588301010032323232323225333002323232323253330073370e900018041baa00113253330083370e900018049baa003132323232533300f301100214a22c6eb4c03c004c03c008dd7180680098051baa00316375c601660126ea800458c028c02c00cc024008c020008c020004c010dd50008a4c26cacae6955ceaab9e5573eae855d101",
    };
  },

  {
    _: {
      title: "OutputReference",
      description:
        "An `OutputReference` is a unique reference to an output on-chain. The `output_index`\n corresponds to the position in the output list of the transaction (identified by its id)\n that produced that output",
      anyOf: [
        {
          title: "OutputReference",
          dataType: "constructor",
          index: 0,
          fields: [
            { title: "transactionId", dataType: "bytes" },
            { dataType: "integer", title: "outputIndex" },
          ],
        },
      ],
    },
  },
) as unknown as XOutputReferenceMint;

export interface XProtocolVersionMint {
  new (): Validator;
  _: { major: bigint; minor: bigint };
}

export const XProtocolVersionMint = Object.assign(
  function () {
    return {
      type: "PlutusV3",
      script:
        "588301010032323232323225333002323232323253330073370e900018041baa00113253330083370e900018049baa003132323232533300f301100214a22c6eb4c03c004c03c008dd6980680098051baa00316375c601660126ea800458c028c02c00cc024008c020008c020004c010dd50008a4c26cacae6955ceaab9e5573eae855d101",
    };
  },

  {
    _: {
      title: "ProtocolVersion",
      anyOf: [
        {
          title: "ProtocolVersion",
          dataType: "constructor",
          index: 0,
          fields: [
            { dataType: "integer", title: "major" },
            { dataType: "integer", title: "minor" },
          ],
        },
      ],
    },
  },
) as unknown as XProtocolVersionMint;

export interface XVoteMint {
  new (): Validator;
  _: "No" | "Yes" | "Abstain";
}

export const XVoteMint = Object.assign(
  function () {
    return {
      type: "PlutusV3",
      script:
        "589e01010032323232323225333002323232323253330073370e900018041baa0011323232533300a3370e90000008a99980698061baa005002161533300a3370e90010008a99980698061baa005002161533300a3370e90020008a99980698061baa0050021616300a37540082944dd7180598049baa00116300a300b0033009002300800230080013004375400229309b2b2b9a5573aaae7955cfaba157441",
    };
  },

  {
    _: {
      title: "Vote",
      anyOf: [
        { title: "No", dataType: "constructor", index: 0, fields: [] },
        { title: "Yes", dataType: "constructor", index: 1, fields: [] },
        { title: "Abstain", dataType: "constructor", index: 2, fields: [] },
      ],
    },
  },
) as unknown as XVoteMint;

export interface XVoterMint {
  new (): Validator;
  _:
    | {
        ConstitutionalCommitteeMember: [
          { VerificationKey: [string] } | { Script: [string] },
        ];
      }
    | {
        DelegateRepresentative: [
          { VerificationKey: [string] } | { Script: [string] },
        ];
      }
    | { StakePool: [string] };
}

export const XVoterMint = Object.assign(
  function () {
    return {
      type: "PlutusV3",
      script:
        "59010c010100323232323232253330023232323232533233008300130093754004264664464a666018600a00226464a666022602600426600a0020082c6022002601c6ea801c54ccc030cdc3a400400226464a666022602600426600a0020082c6022002601c6ea801c54ccc030cdc3a400800226464a66602260260040082c6eb8c044004c038dd50038b18061baa0062232533300c3005001132325333011301300200416375c6022002601c6ea800c54ccc030cdc3a400400226464a66602260260040082c6eb8c044004c038dd50018b18061baa00214a26eb8c030c028dd50011b874800058c028c02c00cc024008c020008c020004c010dd50008a4c26cacae6955ceaab9e5573eae855d101",
    };
  },

  {
    _: {
      title: "Voter",
      anyOf: [
        {
          title: "ConstitutionalCommitteeMember",
          dataType: "constructor",
          index: 0,
          fields: [
            {
              description:
                "A general structure for representing an on-chain `Credential`.\n\n Credentials are always one of two kinds: a direct public/private key\n pair, or a script (native or Plutus).",
              anyOf: [
                {
                  title: "VerificationKey",
                  dataType: "constructor",
                  index: 0,
                  fields: [{ dataType: "bytes" }],
                },
                {
                  title: "Script",
                  dataType: "constructor",
                  index: 1,
                  fields: [{ dataType: "bytes" }],
                },
              ],
            },
          ],
        },
        {
          title: "DelegateRepresentative",
          dataType: "constructor",
          index: 1,
          fields: [
            {
              description:
                "A general structure for representing an on-chain `Credential`.\n\n Credentials are always one of two kinds: a direct public/private key\n pair, or a script (native or Plutus).",
              anyOf: [
                {
                  title: "VerificationKey",
                  dataType: "constructor",
                  index: 0,
                  fields: [{ dataType: "bytes" }],
                },
                {
                  title: "Script",
                  dataType: "constructor",
                  index: 1,
                  fields: [{ dataType: "bytes" }],
                },
              ],
            },
          ],
        },
        {
          title: "StakePool",
          dataType: "constructor",
          index: 2,
          fields: [{ dataType: "bytes" }],
        },
      ],
    },
  },
) as unknown as XVoterMint;
